/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lcdprinter;

/**
 *
 * @author Sarah Lee
 */
//Importacion de las librerias necesaria
import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Enumeration;

public class window extends javax.swing.JFrame 
{

    //Declaracion de variables
    int caracteres = 32; // Representa el numero de caracteres que se pueden introducir en una pantalla LCD
    private OutputStream Output = null;
    SerialPort serialPort; 
    private final String PORT_NAME = "COM5"; //Puerto serial a utilizar
    private static final int TIME_OUT = 2000; //tiempo de ejecucion
    private static final int DATA_RATE = 9600; //la velocidad del puerto, esta esta por default

    public void ArduinoConnection() 
    {
           //variables para la identificacion del puerto y poder hacer la conexion
        CommPortIdentifier portId = null;
        Enumeration portEnum = CommPortIdentifier.getPortIdentifiers();

           //Ciclo para mandar todos los elementos, es decir, aqui se mandara por el puerto los caracteres del mensaje
        while (portEnum.hasMoreElements()) 
        {
            CommPortIdentifier currPortId = (CommPortIdentifier) portEnum.nextElement();
            
            //comprobamos si hay algo
            if (PORT_NAME.equals(currPortId.getName())) 
            {
                portId = currPortId;
                break;
            }
        }

        if (portId == null) 
        {

            System.exit(ERROR);
            return;
        }

        try 
        {
            
            serialPort = (SerialPort) portId.open(this.getClass().getName(), TIME_OUT);

            serialPort.setSerialPortParams(DATA_RATE,
                    SerialPort.DATABITS_8,
                    SerialPort.STOPBITS_1,
                    SerialPort.PARITY_NONE);

            Output = serialPort.getOutputStream();

        } catch (Exception e) {

            System.exit(ERROR);
        }

    }
    
    //Metodo para enviar todos los caracteres 
    private void EnviarDatos(String data) 
    {

        try 
        {
            Output.write(data.getBytes());

        } catch (IOException e) {

            System.exit(ERROR);
        }
    }
    
    //Se mandan llamar algunos metodos para que se ejecuten al momento de iniciar la aplicacion
    public window() {
        initComponents();
        letras();
        ArduinoConnection();
    }

    //Checa la cantidad de caracteres que se van a enviar al arduino
     public void letras() {
        caracteres = 32 - txtMensaje.getText().length(); //Indica la catidad de carcteres
        //disponibles. En el LCD solo se permite imprimir 32 caracteres.

        if (caracteres <= 0) { //Si la cantidad de caracteres se ha agotado... 
            lbCaracteres.setText("Caracteres disponibles: 0"); //Se imprime que la cantidad de 
            //caracteres disponibles es 0
            String cadena = ""; //Se declara la variable que guardará el mensaje a enviar
            cadena = txtMensaje.getText(); //Se asigna el texto del TextField a la variable cadena
            cadena = cadena.substring(0, 32); //Se evita que por alguna razón la variable contenga
            //más de 32 caracteres, utilizando el substring que crea un string a partir de uno mayor.
            txtMensaje.setText(cadena); //se regresa la cadena con 32 caracteres al TextField
        } else {
            //Si la cantidad de caracteres disponibles es ayor a 0 solamente se imprimirá la cantidad
            //de caracteres disponibles
            lbCaracteres.setText("Caracteres disponibles: " + (caracteres));
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtMensaje = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JButton();
        btnFechaHora = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnTemperatura = new javax.swing.JButton();
        lbCaracteres = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnEnviar.setText("Enviar Texto");

        btnFechaHora.setText("Mostrar Fecha/Hora");

        btnLimpiar.setText("Limpiar Texto");

        btnTemperatura.setText("Mostrar Temperatura");

        lbCaracteres.setText("Numero de caracteres restantes:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtMensaje)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbCaracteres, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnFechaHora, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(btnEnviar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTemperatura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbCaracteres)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnFechaHora, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(btnTemperatura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Metodo para cuando se da enter al momento de terminar de escribir el mensaje, se envie
     private void txtMensajeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMensajeKeyReleased
        letras();
    }//GEN-LAST:event_jTextFieldMensajeKeyReleased

      //Accion del boton enviar, es decir, lo que se hara cuando se precione el boton, se enviaran los caracteres
    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarActionPerformed
        EnviarDatos(txtMensaje.getText());
        txtMensaje.setText("");
        letras();
    }//GEN-LAST:event_jButtonEnviarActionPerformed
    //Accion del boton limpiar, es decir, lo que se hara cuando se precione el boton, se limpiara lo que escribimos en el TextField
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        txtMensaje.setText("");
        letras();
    }//GEN-LAST:event_jButtonLimpiarActionPerformed
    //Accion del boton en el TextField, es decir, lo que se hara cuando se precione el campo de texto
    private void txtMensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMensajeActionPerformed
        EnviarDatos(txtMensaje.getText());
        txtMensaje.setText("");
    }//GEN-LAST:event_jTextFieldMensajeActionPerformed
    //En estos dos metodos el, se manda una señal para que se ejecute el metodo del arduino y se muestre lo correspondiente
    //Accion del boton Fecha, es decir, lo que se hara cuando se precione el boton, al darle clic a este boton, se mostrara la fecha en la pantalla LCD
    private void btnFechaHoraActionPerformed(java.awt.event.ActionEvent evt) { 
        String Fecha = ":";
        EnviarDatos(Fecha);
        txtMensaje.setText("");
        letras();
    }     
    //Accion del boton Temperatura, es decir, lo que se hara cuando se precione el boton, al darle clic a este boton, se mostrara la temperatura en la pantalla LCD
    private void btnTemperaturaActionPerformed(java.awt.event.ActionEvent evt) { 
        String temp = "-";
        EnviarDatos(temp);
        txtMensaje.setText("");
        letras();
    }     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnFechaHora;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnTemperatura;
    private javax.swing.JLabel lbCaracteres;
    private javax.swing.JTextField txtMensaje;
    // End of variables declaration//GEN-END:variables
}
